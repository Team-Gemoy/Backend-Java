server.port=8081
server.servlet.context-path=/api

#connect to database
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.url=jdbc:postgresql://localhost:5432/test
spring.datasource.username=postgres
spring.datasource.password=0000
spring.jpa.show-sql=true

#Security
security.jwt.enabled=true
security.jwt.secret_key=YourVeryLongSecretKeyForHMAC256Algorithm

#midtrans config
midtrans.server-key=SB-Mid-server-PHFxj3MC5t07uSEFTL7nxMsz

#email activation from FE to BE karena mau ada response template dari FE so FE yang harus hit apinya
frontend.email.activation=https://dev-team8.netlify.app/register-success?otp=

#file handling
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
app.file.invoice=./invoice/
app.file.e-ticket=./e-ticket/
app.file.boarding-pass=./boarding-pass/

#Config for otp email
OTP_EXPIRED_TIME=1200
#email follow : https://support.google.com/accounts/answer/185833?p=InvalidSecondFactor&visit_id=637690832060530868-1439835364&rd=1
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=devsemail.testing00@gmail.com
spring.mail.password=xcrflcgselxerbfw
spring.mail.sender.name=admin
spring.mail.sender.mail=no-reply-@test.com
# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

BASEURL=http://localhost:8081/api
AUTHURL=http://localhost:8081/api/oauth/token

#spring.security.oauth2.client.registration.google.client-id=827728346612-3snunq8ei4spd1l3sfjg1n6c6u8sagph.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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

#spring.security.oauth2.client.registration.auth0.client-id=IPZuqvAXVdhFzvxQQh6kdSKpwFLYZJ1x
#spring.security.oauth2.client.registration.auth0.client-secret=IPZuqvAXVdhFzvxQQh6kdSKpwFLYZJ1x
#spring.security.oauth2.client.registration.auth0.client-name=Auth0
#spring.security.oauth2.client.registration.auth0.scope=openid, profile, email
#spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:8081/api/login/oauth2/code/auth0
#spring.security.oauth2.client.provider.auth0.issuer-uri=https://dev-cc1a3j72lw313lbz.us.auth0.com/